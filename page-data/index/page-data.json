{"componentChunkName":"component---src-templates-page-jsx","path":"/","result":{"data":{"mdxPage":{"slug":"/","layout":"default","container":null,"title":"Tauri 中文社区","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"slug\": \"/\",\n  \"title\": \"Tauri 中文社区\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MSection = makeShortcode(\"MSection\");\nvar Text = makeShortcode(\"Text\");\nvar InlineText = makeShortcode(\"InlineText\");\nvar Box = makeShortcode(\"Box\");\nvar Lottie = makeShortcode(\"Lottie\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(MSection, {\n    title: mdx(React.Fragment, null, mdx(Text, {\n      mdxType: \"Text\"\n    }, \"\\u7528Web\\u6280\\u672F\\uFF0C\"), \"\\u6784\\u5EFA\", mdx(InlineText, {\n      texts: [\"更小\", \"更快\", \"更安全\"],\n      underline: true,\n      gradient: \"linear(to-l, #7928CA, #FF0080)\",\n      mdxType: \"InlineText\"\n    }), \"\\u7684\\u684C\\u9762\\u5E94\\u7528\"),\n    action: {\n      title: \"开始使用 ✨\",\n      to: \"get-start\",\n      colorScheme: \"teal\"\n    },\n    wraperProps: {\n      bg: useColorModeValue(\"green.100\", \"gray.700\")\n    },\n    position: \"left\",\n    description: \"Tauri \\u4E2D\\u6587\\u793E\\u533A\",\n    mdxType: \"MSection\"\n  }, mdx(Box, {\n    w: [\"100%\", \"50%\"],\n    mdxType: \"Box\"\n  }, mdx(Lottie, {\n    options: {\n      loop: false,\n      animationData: animationData\n    },\n    mdxType: \"Lottie\"\n  }))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/"}},"staticQueryHashes":["1137061806","1383339252","1730835263","3230166491","4276287135","87562001"]}